<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="com.puppycrawl.tools.checkstyle.Checker">
    <module name="com.puppycrawl.tools.checkstyle.TreeWalker">
        <module name="AvoidStarImport"/>
        <module
                name="com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck">
            <property name="regexp" value="true" />
            <property name="illegalPkgs"
                      value="^sun.*, ^org\.apache\.commons\.(?!compress|dbcp2|logging|pool2).*, ^com\.datastax\.oss\.driver\.shaded.*, ^com\.google\.common.*, ^io\.micrometer\.shaded.*, ^org\.flywaydb\.core\.internal.*, ^org\.testcontainers\.shaded.*" />
            <property name="illegalClasses"
                      value="^com\.hazelcast\.util\.Base64, ^org\.junit\.rules\.ExpectedException, ^org\.mockito\.InjectMocks, ^org.springframework.context.annotation.ScannedGenericBeanDefinition, ^reactor\.core\.support\.Assert"/>
        </module>
        <module
                name="com.puppycrawl.tools.checkstyle.checks.imports.IllegalImportCheck">
            <property name="id" value="mainCodeIllegalImportCheck"/>
            <property name="regexp" value="true" />
        </module>
		<module name="InvalidJavadocPosition"/>
	    <module name="JavadocTagContinuationIndentation"/>
	    <module name="SummaryJavadoc">
	      <property name="forbiddenSummaryFragments"
	               value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )"/>
	    </module>
	    <module name="JavadocParagraph"/>
		<module name="JavadocMethod">
	      <property name="accessModifiers" value="public"/>
	      <property name="allowMissingParamTags" value="true"/>
	      <property name="allowMissingReturnTag" value="true"/>
	      <property name="allowedAnnotations" value="Override, Test"/>
	      <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF, COMPACT_CTOR_DEF"/>
	    </module>
	    <module name="MissingJavadocMethod">
	      <property name="scope" value="public"/>
	      <property name="minLineCount" value="2"/>
	      <property name="allowedAnnotations" value="Override, Test"/>
	      <property name="tokens" value="METHOD_DEF, CTOR_DEF, ANNOTATION_FIELD_DEF,
	                                   COMPACT_CTOR_DEF"/>
	    </module>
	    <module name="MissingJavadocType">
	      <property name="scope" value="protected"/>
	      <property name="tokens"
	                value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF,
	                      RECORD_DEF, ANNOTATION_DEF"/>
	      <property name="excludeScope" value="nothing"/>
	    </module>	
	    <module name="SingleLineJavadoc"/>    
        <module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
            <property name="maximum" value="0"/>
            <property name="format" value="org\.junit\.Assert\.assert" />
            <property name="message"
                      value="Please use AssertJ imports." />
            <property name="ignoreComments" value="true" />
        </module>
        <module
                name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
            <property name="maximum" value="0" />
            <property name="format"
                      value="assertThatExceptionOfType\((NullPointerException|IllegalArgumentException|IOException|IllegalStateException)\.class\)" />
            <property name="message"
                      value="Please use specialized AssertJ assertThat*Exception method." />
            <property name="ignoreComments" value="true" />
        </module>
        <module name="com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck">
            <property name="maximum" value="0"/>
            <property name="format" value="org\.mockito\.(Mockito|BDDMockito)\.(when|doThrow|doAnswer)" />
            <property name="message"
                      value="Please use BDD-style (given, when, then) using BDDMockito imports." />
            <property name="ignoreComments" value="true" />
        </module>
    </module>
</module>